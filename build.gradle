apply from: 'lib.gradle'

buildscript {
    repositories {
        mavenLocal()
//        mavenCentral()
        maven { url "http://172.30.162.1/nexus/content/groups/public" }
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.2.RELEASE'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'

    group = 'microconfig'
    version = rootProject.version
    sourceCompatibility = 10

    if (recordCoverage) {
        apply plugin: 'jacoco'
    }

    repositories {
        mavenLocal()
//        mavenCentral()
        maven { url "http://172.30.162.1/nexus/content/groups/public" }
    }

    publishing {
        repositories {            
        }
    }

    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:2.1.2.RELEASE")

        compileOnly 'org.projectlombok:lombok:1.18.4'
        annotationProcessor "org.projectlombok:lombok:1.18.4"

        testImplementation 'junit:junit',
                'org.mockito:mockito-core'
    }

    test {
        exclude '**/*IT.class'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    publishing {
        publications {
            nexus(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }  
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
        xml.setDestination(file("${buildDir}/reports/jacoco/report.xml"))
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}